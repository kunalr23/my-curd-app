{"version":3,"sources":["components/Dashboard/Header.js","components/Dashboard/Table.js","config/firestore.js","components/Dashboard/Add.js","components/Dashboard/Edit.js","components/Dashboard/index.js","components/App/index.js","index.js"],"names":["Header","_ref","setIsAdding","setIsAuthenticated","_jsxs","children","_jsx","style","marginTop","marginBottom","onClick","Table","employees","handleEdit","handleDelete","formatter","Intl","NumberFormat","currency","minimumFractionDigits","className","colSpan","map","employee","i","id","firstName","lastName","email","format","salary","date","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","Add","setEmployees","getEmployees","setFirstName","useState","setLastName","setEmail","setSalary","setDate","onSubmit","async","e","preventDefault","Swal","fire","icon","title","text","showConfirmButton","newEmployee","push","addDoc","collection","error","console","log","concat","timer","htmlFor","type","name","value","onChange","target","marginLeft","Edit","selectedEmployee","setIsEditing","setDoc","doc","Dashboard","setSelectedEmployee","isAdding","isEditing","getDocs","docs","data","useEffect","_Fragment","filter","showCancelButton","confirmButtonText","cancelButtonText","then","result","deleteDoc","employeesCopy","App","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.57609fcc.chunk.js","sourcesContent":["import React from 'react';\n\n\n\nconst Header = ({ setIsAdding, setIsAuthenticated }) => {\n  return (\n    <header>\n      <h1>Employee Management Software</h1>\n      <div style={{ marginTop: '30px', marginBottom: '18px' }}>\n        <button onClick={() => setIsAdding(true)}>Add Employee</button>\n        \n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Table = ({ employees, handleEdit, handleDelete }) => {\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: null,\n  });\n\n  return (\n    <div className=\"contain-table\">\n      <table className=\"striped-table\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Salary</th>\n            <th>Date</th>\n            <th colSpan={2} className=\"text-center\">\n              Actions\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees ? (\n            employees.map((employee, i) => (\n              <tr key={employee.id}>\n                <td>{employee.id}</td>\n                <td>{employee.firstName}</td>\n                <td>{employee.lastName}</td>\n                <td>{employee.email}</td>\n                <td>{formatter.format(employee.salary)}</td>\n                <td>{employee.date} </td>\n                <td className=\"text-right\">\n                  <button\n                    onClick={() => handleEdit(employee.id)}\n                    className=\"button muted-button\"\n                  >\n                    Edit\n                  </button>\n                </td>\n                <td className=\"text-left\">\n                  <button\n                    onClick={() => handleDelete(employee.id)}\n                    className=\"button muted-button\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={7}></td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Cloud Firestore and get a reference to the service\r\n\r\nexport const db = getFirestore(app);","import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\n\nimport { collection, addDoc } from \"firebase/firestore\"; \nimport { db } from '../../config/firestore'\n\nconst Add = ({ employees, setEmployees, setIsAdding, getEmployees }) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [salary, setSalary] = useState('');\n  const [date, setDate] = useState('');\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n\n    if (!firstName || !lastName || !email || !salary || !date) {\n      return Swal.fire({\n        icon: 'error',\n        title: 'Error!',\n        text: 'All fields are required.',\n        showConfirmButton: true,\n      });\n    }\n\n    const newEmployee = {\n      firstName,\n      lastName,\n      email,\n      salary,\n      date,\n    };\n\n    employees.push(newEmployee);\n\n    // TODO: Add doc to DB\n    try {\n      await addDoc(collection(db, \"employees\"), {\n        ...newEmployee\n      });\n    } catch (error) {\n      console.log(error)\n    }\n\n    setEmployees(employees);\n    setIsAdding(false);\n    getEmployees()\n\n    Swal.fire({\n      icon: 'success',\n      title: 'Added!',\n      text: `${firstName} ${lastName}'s data has been Added.`,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  };\n\n  return (\n    <div className=\"small-container\">\n      <form onSubmit={handleAdd}>\n        <h1>Add Employee</h1>\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n          id=\"firstName\"\n          type=\"text\"\n          name=\"firstName\"\n          value={firstName}\n          onChange={e => setFirstName(e.target.value)}\n        />\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          id=\"lastName\"\n          type=\"text\"\n          name=\"lastName\"\n          value={lastName}\n          onChange={e => setLastName(e.target.value)}\n        />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <label htmlFor=\"salary\">Salary ($)</label>\n        <input\n          id=\"salary\"\n          type=\"number\"\n          name=\"salary\"\n          value={salary}\n          onChange={e => setSalary(e.target.value)}\n        />\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={e => setDate(e.target.value)}\n        />\n        <div style={{ marginTop: '30px' }}>\n          <input type=\"submit\" value=\"Add\" />\n          <input\n            style={{ marginLeft: '12px' }}\n            className=\"muted-button\"\n            type=\"button\"\n            value=\"Cancel\"\n            onClick={() => setIsAdding(false)}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Add;\n","import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\n\nimport { doc, setDoc } from \"firebase/firestore\"; \nimport { db } from '../../config/firestore'\n\nconst Edit = ({ employees, selectedEmployee, setEmployees, setIsEditing, getEmployees }) => {\n  const id = selectedEmployee.id;\n\n  const [firstName, setFirstName] = useState(selectedEmployee.firstName);\n  const [lastName, setLastName] = useState(selectedEmployee.lastName);\n  const [email, setEmail] = useState(selectedEmployee.email);\n  const [salary, setSalary] = useState(selectedEmployee.salary);\n  const [date, setDate] = useState(selectedEmployee.date);\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n\n    if (!firstName || !lastName || !email || !salary || !date) {\n      return Swal.fire({\n        icon: 'error',\n        title: 'Error!',\n        text: 'All fields are required.',\n        showConfirmButton: true,\n      });\n    }\n\n    const employee = {\n      id,\n      firstName,\n      lastName,\n      email,\n      salary,\n      date,\n    };\n\n   \n    await setDoc(doc(db, \"employees\", id), {\n      ...employee\n    });\n\n    setEmployees(employees);\n    setIsEditing(false);\n    getEmployees()\n\n    Swal.fire({\n      icon: 'success',\n      title: 'Updated!',\n      text: `${employee.firstName} ${employee.lastName}'s data has been updated.`,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  };\n\n  return (\n    <div className=\"small-container\">\n      <form onSubmit={handleUpdate}>\n        <h1>Edit Employee</h1>\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n          id=\"firstName\"\n          type=\"text\"\n          name=\"firstName\"\n          value={firstName}\n          onChange={e => setFirstName(e.target.value)}\n        />\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          id=\"lastName\"\n          type=\"text\"\n          name=\"lastName\"\n          value={lastName}\n          onChange={e => setLastName(e.target.value)}\n        />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <label htmlFor=\"salary\">Salary ($)</label>\n        <input\n          id=\"salary\"\n          type=\"number\"\n          name=\"salary\"\n          value={salary}\n          onChange={e => setSalary(e.target.value)}\n        />\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={e => setDate(e.target.value)}\n        />\n        <div style={{ marginTop: '30px' }}>\n          <input type=\"submit\" value=\"Update\" />\n          <input\n            style={{ marginLeft: '12px' }}\n            className=\"muted-button\"\n            type=\"button\"\n            value=\"Cancel\"\n            onClick={() => setIsEditing(false)}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Edit;\n","import React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\n\nimport Header from './Header';\nimport Table from './Table';\nimport Add from './Add';\nimport Edit from './Edit';\n\n\nimport { collection, getDocs,  doc, deleteDoc } from \"firebase/firestore\";\nimport { db } from '../../config/firestore'\n\n\nconst Dashboard = ({ setIsAuthenticated }) => {\n  const [employees, setEmployees] = useState();\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n\n  const getEmployees = async () => {\n    const querySnapshot = await getDocs(collection(db, \"employees\"));\n    const employees = querySnapshot.docs.map(doc => ({id: doc.id, ...doc.data()}))\n    setEmployees(employees)\n  }\n\n  useEffect(() => {\n    getEmployees()\n  }, []);\n\n  const handleEdit = id => {\n    const [employee] = employees.filter(employee => employee.id === id);\n\n    setSelectedEmployee(employee);\n    setIsEditing(true);\n  };\n\n  const handleDelete = id => {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, cancel!',\n    }).then(result => {\n      if (result.value) {\n        const [employee] = employees.filter(employee => employee.id === id);\n\n        deleteDoc(doc(db, \"employees\", id));\n\n        Swal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: `${employee.firstName} ${employee.lastName}'s data has been deleted.`,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n\n        const employeesCopy = employees.filter(employee => employee.id !== id);\n        setEmployees(employeesCopy);\n      }\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      {!isAdding && !isEditing && (\n        <>\n          <Header\n            setIsAdding={setIsAdding}\n            setIsAuthenticated={setIsAuthenticated}\n          />\n          <Table\n            employees={employees}\n            handleEdit={handleEdit}\n            handleDelete={handleDelete}\n          />\n        </>\n      )}\n      {isAdding && (\n        <Add\n          employees={employees}\n          setEmployees={setEmployees}\n          setIsAdding={setIsAdding}\n          getEmployees={getEmployees}\n        />\n      )}\n      {isEditing && (\n        <Edit\n          employees={employees}\n          selectedEmployee={selectedEmployee}\n          setEmployees={setEmployees}\n          setIsEditing={setIsEditing}\n          getEmployees={getEmployees}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\n\n\nimport Dashboard from '../Dashboard';\n\nconst App = () => {\n  \n\n  \n\n  return (\n    <>\n    <Dashboard  />\n    \n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}